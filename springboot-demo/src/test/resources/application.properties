# server port
server.port=8011
server.tomcat.accesslog.directory=C:/logs
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t [%I] %{X-Forwarded-For}i %a %r %s (%D ms)
#日志
logging.config=classpath:logback-spring.xml
#监控
management.security.enabled=false
endpoints.shutdown.enabled=true
#数据源配置
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/done?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=206242

#mongo配置
spring.data.mongodb.uri=192.168.74.128:57017,192.168.74.128:57018,192.168.74.128:57019/demo 

#是否启用aop
#spring.aop.auto=true
#使用cglib代理  与EnableAspectJAutoProxy注解功能类似
#spring.aop.proxy-target-class=true

#测试ConditionalOnProperty配置文件注解
condition.runnable.active=true

#容器执行refresh之前的回掉
context.initializer.classes=com.done.springboot.extend.MyApplicationContextInitializer

redis.host:192.168.1.74
redis.port:3306


##多数据源配置
# db1库
spring.datasource.db1.url=jdbc:mysql://127.0.0.1:3306/springboot-db1?useUnicode=true&characterEncoding=utf-8
spring.datasource.db1.username=root
spring.datasource.db1.password=206242
spring.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.db1.initialize=true

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.db1.initialSize=5
spring.datasource.db1.minIdle=5
spring.datasource.db1.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.db1.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.db1.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.db1.minEvictableIdleTimeMillis=300000
spring.datasource.db1.validationQuery=SELECT 1 FROM DUAL
spring.datasource.db1.testWhileIdle=true
spring.datasource.db1.testOnBorrow=false
spring.datasource.db1.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.db1.poolPreparedStatements=true
spring.datasource.db1.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.db1.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.db1.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.db1.useGlobalDataSourceStat=true

# db2库
spring.datasource.db2.url=jdbc:mysql://127.0.0.1:3306/springboot-db2?useUnicode=true&characterEncoding=utf-8
spring.datasource.db2.username=root
spring.datasource.db2.password=206242
spring.datasource.db2.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.db2.initialize=true


# mongo1
# spring.data.mongodb.first.host=192.168.74.128:57017,192.168.74.128:57018,192.168.74.128:57019
spring.data.mongodb.first.host=192.168.74.128
spring.data.mongodb.first.port=57018
spring.data.mongodb.first.database= demo
# mongo2
#spring.data.mongodb.second.host=192.168.74.128:57017,192.168.74.128:57018,192.168.74.128:57019
spring.data.mongodb.second.host=192.168.74.128
spring.data.mongodb.second.port=57018
spring.data.mongodb.second.database= demo2
